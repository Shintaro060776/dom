name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-1
  ECR_REGISTRY: public.ecr.aws
  ECR_REPOSITORY: x6i1u1x3/next
  IMAGE_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Check Out Repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Amazon ECR Public
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

    - name: Configure AWS credentials
      run: |
        aws configure set aws_access_key_id ${{secrets.AWS_ACCESS_KEY_ID}}
        aws configure set aws_secret_access_key ${{secrets.AWS_SECRET_ACCESS_KEY}}
        aws configure set default.region $AWS_REGION

    - name: Build, tag, and push image to Amazon ECR
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: List files
      run: |
        echo "Listing files in the current directory:"
        pwd
        ls -l

    - name: Deploy to EKS
      run: |
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        mv ./kubectl /usr/local/bin/kubectl
        
        echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > kubeconfig
        export KUBECONFIG=kubeconfig
      
        echo "Current directory:"
        pwd
        echo "Listing files in the current directory:"
        ls -l
      
        kubectl apply -f ./deployment.yaml
        kubectl set image deployment/next-deployment next-containers=public.ecr.aws/x6i1u1x3/next:latest --record

    - name: Deploy to ECS
      run: |
        TASK_DEFINITION=$(aws ecs register-task-definition --family my-task-family --container-definitions file://ecs-container-definitions.json)
        TASK_DEFINITION_ARN=$(echo $TASK_DEFINITION | jq -r .taskDefinition.taskDefinitionArn)
      
        aws ecs update-service --cluster "arn:aws:ecs:ap-northeast-1:715573459931:cluster/next-cluster" --service "next-service" --task-definition $TASK_DEFINITION_ARN
      env:
        AWS_REGION: ap-northeast-1