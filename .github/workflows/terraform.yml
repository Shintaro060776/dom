name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-1

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Check Out Repository
        uses: actions/checkout@v2

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v1

      - name: 'Terraform Init'
        run: terraform init
        working-directory: terraform_configuration

      - name: 'List files in terraform_configuration directory'
        run: |
          ls -alh terraform_configuration/
          pwd
          ls

      - name: 'Terraform Plan'
        run: terraform plan
        working-directory: terraform_configuration

      - name: 'Terraform Apply'
        run: terraform apply -auto-approve
        working-directory: terraform_configuration

  deploy:
    needs: terraform
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: setup nodejs
        uses: actions/setup-node@v2
        with:
            node-version: '14'

      - name: install dependencies for blog app
        run: |
          cd blog/myapp
          npm install

      - name: build the blog react app
        run: |
          cd blog/myapp
          npm run build

      - name: build the fluid app
        run: |
          cd fluid
          npm install
          npm run build

      - name: deploy to ec2
        env:
          PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
          SERVER_IP: ${{secrets.SERVER_IP}}
        run: |
          echo "$PRIVATE_KEY" > deploy_key
          chmod 600 deploy_key

          ssh -i deploy_key -o ServerAliveInterval=60 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o GSSAPIAuthentication=no ec2-user@SERVER_IP 'sudo systemctl restart nginx'

          rsync -avz -e "ssh -i deploy_key -o ServerAliveInterval=60 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o GSSAPIAuthentication=no" /home/runner/work/dom/blog/myapp/build/ ec2-user@$SERVER_IP:/usr/share/nginx/html/blog/

          rsync -avz -e "ssh -i deploy_key -o ServerAliveInterval=60 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o GSSAPIAuthentication=no" /home/runner/work/dom/fluid/dist/ ec2-user@$SERVER_IP:/usr/share/nginx/html/fluid/

          ssh -i deploy_key -o ServerAliveInterval=60 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o GSSAPIAuthentication=no ec2-user@$SERVER_IP 'sudo systemctl restart nginx'

          rm -f deploy_key


