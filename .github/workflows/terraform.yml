name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-1
  ECR_REGISTRY: public.ecr.aws
  ECR_REPOSITORY: x6i1u1x3/next
  IMAGE_TAG: latest

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Change to Terraform Directory'
        run: cd terraform_configuration

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v1

      - name: 'Terraform Init'
        run: terraform init
        working-directory: terraform_configuration

      - name: 'Terraform Plan'
        run: terraform plan
        working-directory: terraform_configuration

      - name: 'Terraform Apply'
        run: terraform apply -auto-approve
        working-directory: terraform_configuration

  build-and-push:
    needs: terraform
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Amazon ECR Public
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{secrets.AWS_ACCESS_KEY_ID}}
          aws configure set aws_secret_access_key ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws configure set default.region $AWS_REGION

      - name: Build, tag, and push image to Amazon ECR
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG